appName: datacatalog-backend-{{ .Values.nameSuffix }}
secretName: datacatalog-api-{{ .Values.nameSuffix }}
environment: {{ .Values.nameSuffix }}

apiDeployment:
  imagePullSecrets:
    - name: image-pull-sec
  replicaCount: 1
  nodeSelector:
    agentpool: worker
  image:
    repository: serviceacrps.azurecr.io/datacatalog-backend
    tag: 3fb47d1
  env:
    "ASPNETCORE_ENVIRONMENT": "{{ .Values.nameSuffix }}"
    "ContactInfo__Name": "Data Stewards"
    "ContactInfo__Link": "https://energinet.service-now.com/sp?id=sc_cat_item&sys_id=99b1b49287a6f450b11964e80cbb35a5&sysparm_category=4e327cd287a6f450b11964e80cbb3599"
    "ContactInfo__Email": "datahelp@energinet.dk"

drmDeployment:
  imagePullSecrets:
    - name: image-pull-sec
  replicaCount: 1
  nodeSelector:
    agentpool: worker
  image:
    repository: serviceacrps.azurecr.io/datacatalog-backend-drm
    tag: 3fb47d1
  env:
    "ASPNETCORE_ENVIRONMENT": "{{ .Values.nameSuffix }}"

job:
  enabled: true
  imagePullSecrets:
    - name: image-pull-sec
  image:
    repository: serviceacrps.azurecr.io/datacatalog-backend-migration
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 3fb47d1

  env:
    "ASPNETCORE_ENVIRONMENT": "{{ .Values.nameSuffix }}"

janus:
  enabled: true
  host: datacatalog-backend.{{ .Values.ingress.host }}
  certmanagerIssuer:
    name: {{ .Values.ingress.certmanagerissuer | quote }}
    kind: ClusterIssuer

  ingressRoutes:
    - name: argo-workflows
      entryPoints:
        - websecure
      routes:
        - kind: Rule
          match:
          services:
            - name: datacatalog-backend-prod-svc
              port: 80
      certificate:
        enabled: true

lethe:
  enabled: true
  secretStores:
    - name: k8s-secret-backend
      annotations:
        "helm.sh/hook": pre-install,pre-upgrade
      providers:
        vault:
          server: "https://service-vault-dp.westeurope.cloudapp.azure.com/"
          path: "k8s"
          version: "v2"
          auth:
            # Authenticate against Vault using a Kubernetes ServiceAccount
            # token stored in a Secret.
            # https://www.vaultproject.io/docs/auth/kubernetes
            kubernetes:
              # Path where the Kubernetes authentication backend is mounted in Vault
              mountPath: "kubernetes-{{ .Values.nameSuffix }}"
              # A required field containing the Vault Role to assume.
              role: "k8s-secrets-prod"

  secrets:
    - name: image-pull-sec-es
      annotations:
        "helm.sh/hook": pre-install,pre-upgrade
      secretStore:
        backend: k8s-secret-backend
        kind: SecretStore
      target:
        name: image-pull-sec
        template:
          type: kubernetes.io/dockerconfigjson
          data:
            .dockerconfigjson: |
              {"auths":{"serviceacrps.azurecr.io":{"username":"{{`{{ .username | toString }}`}}","password":"{{`{{ .password | toString }}`}}","auth":"{{`{{ .auth | base64encode | toString }}`}}"}}}
      data:
        - secretKey: password
          remoteRef:
            key: secrets/acr-creds
            property: password
        - secretKey: username
          remoteRef:
            key: secrets/acr-creds
            property: username
        - secretKey: auth
          remoteRef:
            key: secrets/acr-creds
            property: auth